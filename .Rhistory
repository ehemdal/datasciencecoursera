ss[,17]
ss[23]
ss[,23]
class(ss[,23])
min(ss[23])
min(ss[,23])
test <- minval
test
test <- ss[,colnbr] == minval
test <- ss[,11] == minval
test
ss[,2]
?subset
ss[,2]
subset(ss[,2], test)
debugSource('C:/git/ProgrammingAssignment3/best.R')
best("GA","heart attack")
debugSource('C:/git/ProgrammingAssignment3/best.R')
source('C:/git/ProgrammingAssignment3/best.R')
debugSource('C:/git/ProgrammingAssignment3/best.R')
best("GA","heart attack")
debugSource('C:/git/ProgrammingAssignment3/best.R')
best("GA","heart attack")
class(result)
?sort
source('C:/git/ProgrammingAssignment3/best.R')
source('C:/git/ProgrammingAssignment3/best.R')
best("GA","heart attack")
best("MA","heart attack")
best("MA","heart failure")
best("MA","pneumonia")
debugSource('C:/git/ProgrammingAssignment3/best.R')
best("MA","pneumonia")
class(result)
sort(result)
debugSource('C:/git/ProgrammingAssignment3/best.R')
best("MA","pneumonia")
result
result
result[1]
debugSource('C:/git/ProgrammingAssignment3/best.R')
best("MA","pneumonia")
dir()
source "rprog-scripts-submitscript3.R"
source "submitscript3.R"
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
2
submit()
submit()
submit()
best("NY","pneumonia")
debugSource('C:/git/ProgrammingAssignment3/best.R')
best("NY","pneumonia")
state
outcome
colnbr
sd
ss[,colnbr]
as.numeric(ss[,colnbr])
?min
debugSource('C:/git/ProgrammingAssignment3/best.R')
debugSource('C:/git/ProgrammingAssignment3/best.R')
best("NY","pneumonia")
submit()
submit()
submit()
best("TX", "heart failure")
source('C:/git/ProgrammingAssignment3/rankhospital.R')
source('C:/git/ProgrammingAssignment3/rankhospital.R')
source('C:/git/ProgrammingAssignment3/rankhospital.R')
source('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("GA", "heart failure")
source('C:/git/ProgrammingAssignment3/rankhospital.R')
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("GA", "heart failure")
ss
ss[,11]
?sort
colnbr
ss[,colnbr]
rates <- as.numeric(ss[,colnbr])
num
rates <- sort(ss[,colnbr])
rates
rates <- sort(as.numeric(ss[,colnbr])
)
rates
rates <- unique(sort(as.numeric(ss[,colnbr]))
)
rates
length(rates)
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("GA", "heart failure")
result
rm(result)
rankhospital("GA", "heart failure")
rates
class(rates)
rankhospital("GA", "heart failure", "George")
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("GA", "heart failure", "George")
rankhospital("GA", "heart failure", "worst")
source('C:/git/ProgrammingAssignment3/rankhospital.R')
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("GA", "heart failure", "worst")
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("GA", "heart failure", "worst")
rank
ss[,1]
ss[,2]
subset(ss[,2], ss[,17] == rank)
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("GA", "heart failure", "worst")
rank
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("GA", "heart failure", "worst")
result
result
rankhospital("TX", "heart failure", 5)
source('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 5)
rankhospital("TX", "heart failure", 3)
source('C:/git/ProgrammingAssignment3/rankhospital.R')
submit()
submit()
submit()
submit()
source('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
rank
result
rankhospital("WA", "heart attack", 7)
rankhospital("WA", "heart attack", 7)
submit()
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("WA", "heart attack", 7)
colnbr
num
length(rates)
ss[,2]
ss[,colnbr] == rank
rates
rank
as.numeric(rank)
14 == 14.0
ss[,colnbr]
as.numeric(ss[,2])
ss[,2]
as.numeric(ss[,colnbr])
?as.numeric
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("WA", "heart attack", 7)
submit()
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("WA", "heart attack", 7)
ss[,colnbr]
rank
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("WA", "heart attack", 7)
ss
ss$WA
ss$WA
ss[1]
ss[2]
ss[3]
ss[4]
ss[5]
ss[6]
ss[11]
colnbr
as.vector(ss[colnbr])
rates
rates
num
rank
num
rank
?subset
result
num
ss[,2]
result
result
result
subset(ss[,2], ss[,colnbr]== rank)
rates[num]
submit
dir()
source(submitscript3.R)
source("submitscript3.R")
submit()
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
d
sd$TX
colnbr
ss[,colnbr]
ss[,colnbr]
?sort
rates
num
ss[,colnbr]
result
class(ss)
?subset
rank
rates
num
rank[4]
rates[4]
subset(d[,2], ss[.17]==rank)
subset(ss[,2],ss[,17]== rank)
ss[,2]
result
rank <- 8.7
result <- subset(ss[,2],ss[,colnbr]==rank)
result
unique(sort(as.numeric(ss[,colnbr])))
(sort(as.numeric(ss[,colnbr])))
debugSource('C:/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
submit()
5
submit()
source('C:/git/ProgrammingAssignment3/rankall.R')
rankall()
source('C:/git/ProgrammingAssignment3/rankall.R')
d
class(d)
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
source('C:/git/ProgrammingAssignment3/rankall.R')
source('C:/git/ProgrammingAssignment3/rankall.R')
source('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart attack",20)
source('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart attack",20)
sl
sl <- unique(sl)
sl
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart attack",20)
sl
class(d)
?sapply
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart attack",20)
cn
sl
?split
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart attack",20)
cn
sl
sd <-split(d,sl)
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart attack",20)
sl
sd <- split(d,sl)
?sapply
sd
sd
class(sd)
class(sd[1])
class(sd[[1]])
sd <- sapply(d,split(d,sl))
sd <-split(d,sl)
class(sd)
class(sd[1])
length sd[1]
length(sd[1])
q
?split
?tapply
class(sd)
sv <- as.vector(sd)
class sv
class(sv)
class(sv[1])
sv[1]
sv
class(sd)
?simplify
class(sd[1])
class(sd[[1]])
tapply(sd,1)
tapply(as.vector(sd))
?d
with(sd,tapply(1))
with(sd,tapply(1,1))
sv <- with(sd, tapply(1,1))
class sv
class(sv)
sv
state <- "TX"
sd$state
sd$"state"
sd$TX
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
d
class(d)
?data.frame
row.names(d)
ocname
sl
sd2 <-split(d, d[,7])
identical(sd, sd2)
class(sd2)
class(sd2[1])
?lapply
class(sd)
class(sd[1])
class(sd[[1]])
states <- unique(sl)
states
?split
v <-as.vector(sd[[states]])
v <-as.vector(sd[[1:4]])
v <-as.vector(sd[1:4])
class(v)
v[1]
length(sd)
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
length(sd)
length(v)
class(v[1])
class(v[[1]])
v <-as.vector(v)
class(V)
class(v)
class(v[1])
class(v[[1]])
class(sd)
class(sd[1])
class(sd[[1]])
?for
()
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
?data.frame
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
states
answer
answer
print(answer)
answer[1]
row.names(answwer)
row.names(answer)
?cbind
answer <- data.frame(row.names = states, col.names = c("hospital","state"))
states
?answer
answer
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
answer <-data.frame(row.names=states, col.names=c("hospital","state"))
states
lengh(d)
length(d)
class(d)
rm(states)
rm(result)
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
length(d)
sl
cn
length(sd)
states
?data.frame
n <- c(2,3,5)
s <-c("AA", "bb","cc")
b <-c(TRUE, FALSE,TRU)
b <-c(TRUE, FALSE,TRUE)
df <- data.frame(n,s,b)
df
?cbind
?data.frame
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
source('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
answer
source('C:/git/ProgrammingAssignment3/rankall.R')
source('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
ocname
sl
state
rates
rank
result
hospital
state
hospital
state
answer
print(answer)
answer
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
answer
state
hospital
rankall("heart failure", 1)
source('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
answer
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
length(hospital)
hospital
state
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
answer
answer
source('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
source('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
source('C:/git/ProgrammingAssignment3/rankall.R')
rankall("heart failure", 1)
head(rankall("heart attack", 20), 10)
warnings()
submit()
submit()
submit()
source('C:/git/ProgrammingAssignment3/rankall.R')
submit()
submit()
submit()
submit()
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("pneumonia","worst")
length(states)
warnings()
rankall("pneumonia","worst")
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("pneumonia","worst")
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("pneumonia","worst")
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("pneumonia","worst")
state
state
rankhospital("pneumonia","GU", "worst")
rankhospital("GU","pneumonia", "worst")
source('C:/git/ProgrammingAssignment3/rankall.R')
rankall("pneumonia","worst")
submit()
source('C:/git/ProgrammingAssignment3/rankall.R')
rankall("pneumonia","worst")
source('C:/git/ProgrammingAssignment3/rankall.R')
source('C:/git/ProgrammingAssignment3/rankall.R')
rankall("pneumonia","worst")
head(rankall("pneumonia","worst"),10)
debugSource('C:/git/ProgrammingAssignment3/rankall.R')
rankall("pneumonia","worst")
i
num
source('C:/git/ProgrammingAssignment3/rankall.R')
source('C:/git/ProgrammingAssignment3/rankall.R')
rankall("pneumonia","worst")
source('C:/git/ProgrammingAssignment3/rankall.R')
rankall("pneumonia","worst")
submit()
setwd("C:/git/datasciencecoursera/GetCleanData")
?download.file
?download.file
source('C:/git/datasciencecoursera/GetCleanData/run_analysis.R')
source('C:/git/datasciencecoursera/GetCleanData/run_analysis.R')
source('C:/git/datasciencecoursera/GetCleanData/run_analysis.R')
Q
